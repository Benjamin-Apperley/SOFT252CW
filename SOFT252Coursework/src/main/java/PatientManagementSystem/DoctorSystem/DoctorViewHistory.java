/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PatientManagementSystem.DoctorSystem;

import PatientManagementSystem.Appointment;
import PatientManagementSystem.PatientSystem.PatientBase;
import PatientManagementSystem.Prescription;
import PatientManagementSystem.Serialize;
import PatientManagementSystem.User;
import java.util.ArrayList;

/**
 *
 * @author apper
 */
public class DoctorViewHistory extends javax.swing.JFrame {

    /**
     * Creates new form DoctorViewHistory
     */
    public DoctorViewHistory() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDisplay = new javax.swing.JTextArea();
        btnRefresh = new javax.swing.JButton();
        txtPatient = new javax.swing.JTextField();
        lblPatient = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtDisplay.setColumns(20);
        txtDisplay.setRows(5);
        jScrollPane1.setViewportView(txtDisplay);

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        lblPatient.setText("Patient");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(btnBack)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(lblPatient)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(txtPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(btnRefresh)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefresh)
                    .addComponent(txtPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatient))
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
      this.setVisible(false);
      new DoctorBase().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
     ArrayList<Prescription> Prescription = new ArrayList<>();
     Serialize.getInstance().setName("Prescriptions.ser");
     Prescription = (ArrayList<Prescription>)Serialize.getInstance().readObject();
     
     ArrayList<Appointment> Appointment = new ArrayList<>();
     Serialize.getInstance().setName("Appointments.ser");
     Appointment = (ArrayList<Appointment>)Serialize.getInstance().readObject();
     
     ArrayList<User> Patients = new ArrayList<>();
     Serialize.getInstance().setName("Users.ser");
     Patients = (ArrayList<User>)Serialize.getInstance().readObject();
     User x;
    
     Prescription p;
     Appointment a;
     String text = "";
     
     for(int i = 0; i < Patients.size(); i ++)
     {
         x = Patients.get(i);
         if(x.getId().equals(txtPatient.getText()))
         {
             text += "APPOINTMENTS\n";
             for(int j = 0; j < Appointment.size(); j++)
             {
                 a = Appointment.get(j);
                 if(a.getPatientId().equals(txtPatient.getText()))
                 {
                     text += "Doctor ID: " + a.getDoctorId() + "\n" + "Patient ID: " + a.getPatientId() + "\n"
                         + "Possible Dates: " + a.getDates() + "\n";
                 }
                 else
                 {
                     
                 }
             }
             text += "PRESCRIPTIONS\n";
             for(int k = 0; k < Prescription.size(); k++)
             {
                 p = Prescription.get(k);
                 if(p.getPatientId().equals(txtPatient.getText()))
                 {
                     text += "Doctor ID: " + p.getDoctorId() + "\n" + "Patient ID: " + p.getPatientId() + "\n"
                         + "Notes: " + p.getNotes() + "\n" + "Medicine: " + p.getMedicine() + "\n"
                         + "Quantity: " + p.getQuantity() + "\n" + "Dosage: " + p.getDosage() + "\n";
                 }
                 else
                 {
                     
                 }
             }
         }
         else
         {
             
         }
     }
     txtPatient.setText(text);
    }//GEN-LAST:event_btnRefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorViewHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorViewHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorViewHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorViewHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoctorViewHistory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPatient;
    private javax.swing.JTextArea txtDisplay;
    private javax.swing.JTextField txtPatient;
    // End of variables declaration//GEN-END:variables
}
